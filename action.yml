name: 'Ritchie CLI Action'

description: 'Github Action to run Ritchie CLI commands on any OS runner ‚öôÔ∏èüñ•'

inputs:

    rit_formula_command:
        description: 'The rit formula command line you want to run'
        required: true
    rit_repo_url:
        description: 'e.g https://github.com/ZupIT/ritchie-formulas'
        required: true
    access_token:
        description: 'Github ACCESS TOKEN with access to repository url'
        required: false

runs:
  using: "composite"
  steps:

    - name: Check Runner
      run: echo ü§ñ OS runner is $(uname)
      shell: bash

    - name: Install Ritchie CLI
      run: |
        if [ "$(uname)" = "Linux" ]; then
          curl -fsSL https://commons-repo.ritchiecli.io/install.sh | bash
        elif [ "$(uname)" = "Darwin" ]; then
          curl -fsSL https://commons-repo.ritchiecli.io/install.sh | bash
        fi
      shell: bash

    - name: Install Ritchie CLI
      run: |
        if ( ("$(uname)" -ne "Linux") -and ("$(uname)" -ne "Darwin") ){
          msiexec /i https://commons-repo.ritchiecli.io/latest/ritchiecli.msi
          ls
        }
      shell: pwsh

    - name: Initialize Ritchie CLI
      run: echo '{"addCommons":false, "sendMetrics":true, "runType":"local"}' | rit init --stdin
      # Next LTS: Use rit init --sendMetrics="yes" --addCommons="no" --runType="local"
      shell: bash

    - name: Add formula repository
      run: |
        if [ -z ${{ inputs.access_token }} ]; then
          echo "PUBLIC üîì repository workflow detected"
          rit add repo --provider=Github --name=public-repo --repoUrl=${{ inputs.rit_repo_url }} --priority=1
        else
          echo "PRIVATE üîê repository workflow detected"
          rit add repo --provider=Github --name=private-repo --repoUrl=${{ inputs.rit_repo_url }} --priority=1 --token=${{ inputs.access_token }} 
        fi
      shell: bash

    - name: Run formula command
      run: |
        echo ‚öôÔ∏è Ritchie Formula command to run: ${{ inputs.rit_formula_command }}
        ${{ inputs.rit_formula_command }}
      shell: bash

branding:
    icon: 'terminal'
    color: 'gray-dark'